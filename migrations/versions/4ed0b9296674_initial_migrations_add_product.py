"""Initial migrations add product

Revision ID: 4ed0b9296674
Revises: f18c6d8cca6d
Create Date: 2024-10-15 10:20:43.832782

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4ed0b9296674'
down_revision = 'f18c6d8cca6d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('se')
    op.drop_table('seies')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=False))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('stock_quantity', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('specific_attributes', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('series_id', sa.UUID(), nullable=True))
        batch_op.add_column(sa.Column('topic_ids', sa.UUID(), nullable=True))
        batch_op.drop_constraint('products_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'topics', ['topic_ids'], ['id'])
        batch_op.create_foreign_key(None, 'series', ['series_id'], ['id'])
        batch_op.drop_column('category_id')

    with op.batch_alter_table('series', schema=None) as batch_op:
        batch_op.add_column(sa.Column('brand_id', sa.UUID(), nullable=True))
        batch_op.drop_constraint('series_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'brands', ['brand_id'], ['id'])
        batch_op.drop_column('category_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('series', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('series_category_id_fkey', 'categories', ['category_id'], ['id'])
        batch_op.drop_column('brand_id')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('products_category_id_fkey', 'categories', ['category_id'], ['id'])
        batch_op.drop_column('topic_ids')
        batch_op.drop_column('series_id')
        batch_op.drop_column('specific_attributes')
        batch_op.drop_column('stock_quantity')
        batch_op.drop_column('description')
        batch_op.drop_column('price')

    op.create_table('seies',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='seies_category_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='seies_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='seies_pkey')
    )
    op.create_table('se',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='se_category_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='se_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='se_pkey')
    )
    # ### end Alembic commands ###
